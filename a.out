Sections:
section .text (attr=<acrx> align=2):
       0: opts: cpu types: m68000
       0: opts: fpu id 1 (f2xx)
       0: opts: small data is disabled
       0: opts: optimizations enabled
       0: opts: opt generic (1)
       0: opts: opt movem (0)
       0: opts: opt pea (0)
       0: opts: opt clr (0)
       0: opts: opt st (0)
       0: opts: opt lsl (0)
       0: opts: opt mul (0)
       0: opts: opt div (0)
       0: opts: opt float const (1)
       0: opts: opt branch to jump (0)
       0: opts: opt jump to longbranch (0)
       0: opts: opt pc-relative (1)
       0: opts: opt branch (1)
       0: opts: opt displacement (1)
       0: opts: opt absolute (1)
       0: opts: opt moveq (1)
       0: opts: opt neg.moveq (0)
       0: opts: opt quick (1)
       0: opts: opt branch to nop (1)
       0: opts: opt base disp (1)
       0: opts: opt outer disp (1)
       0: opts: opt adda/subq to lea (1)
       0: opts: opt lea to addq/subq (1)
       0: opts: opt immediate areg (1)
       0: opts: opt for speed (0)
       0: opts: opt for size (0)
       0: opts: opt small code (0)
       0: opts: opt small data (0)
       0: opts: warn about optimizations (0)
       0: opts: PIC check (0)
       0: opts: type and range checks (1)
       0: opts: hide all warnings (0)
       0: symbol: main LAB (0) UNUSED sec=.text 
       0: data(2): 61 20 
       2: data(4): 3f 3c 00 02 
       6: data(6): 48 79 00 00 00 00 rabs(2,0-31,0xffffffff,0,file_name IMP REF ) 
       c: data(4): 3f 3c 00 3d 
      10: data(2): 4e 41 
      12: data(2): 4a 80 
      14: data(2): 6b 2a 
      16: data(6): 33 c0 00 00 00 00 rabs(2,0-31,0xffffffff,0,file_handle IMP REF ) 
      1c: data(2): 50 8f 
      1e: data(2): 61 12 
      20: data(2): 60 1e 
      22: symbol: enter_super LAB (0x22) sec=.text 
      22: data(2): 42 a7 
      24: data(4): 3f 3c 00 20 
      28: data(2): 4e 41 
      2a: data(6): 23 c0 00 00 00 00 rabs(2,0-31,0xffffffff,0,old_sp IMP REF ) 
      30: data(2): 4e 75 
      32: symbol: exit_super LAB (0x32) sec=.text 
      32: data(6): 2f 39 00 00 00 00 rabs(2,0-31,0xffffffff,0,old_sp IMP REF ) 
      38: data(4): 3f 3c 00 20 
      3c: data(2): 4e 41 
      3e: data(2): 4e 75 
      40: symbol: exit LAB (0x40) sec=.text 
      40: data(4): 2f 38 00 00 
      44: data(2): 4e 41 
section .bss (attr=<aurw> align=2):
       0: opts: cpu types: m68000
       0: opts: fpu id 1 (f2xx)
       0: opts: small data is disabled
       0: opts: optimizations enabled
       0: opts: opt generic (1)
       0: opts: opt movem (0)
       0: opts: opt pea (0)
       0: opts: opt clr (0)
       0: opts: opt st (0)
       0: opts: opt lsl (0)
       0: opts: opt mul (0)
       0: opts: opt div (0)
       0: opts: opt float const (1)
       0: opts: opt branch to jump (0)
       0: opts: opt jump to longbranch (0)
       0: opts: opt pc-relative (1)
       0: opts: opt branch (1)
       0: opts: opt displacement (1)
       0: opts: opt absolute (1)
       0: opts: opt moveq (1)
       0: opts: opt neg.moveq (0)
       0: opts: opt quick (1)
       0: opts: opt branch to nop (1)
       0: opts: opt base disp (1)
       0: opts: opt outer disp (1)
       0: opts: opt adda/subq to lea (1)
       0: opts: opt lea to addq/subq (1)
       0: opts: opt immediate areg (1)
       0: opts: opt for speed (0)
       0: opts: opt for size (0)
       0: opts: opt small code (0)
       0: opts: opt small data (0)
       0: opts: warn about optimizations (0)
       0: opts: PIC check (0)
       0: opts: type and range checks (1)
       0: opts: hide all warnings (0)
       0: space(4,fill=00 00 00 00)
       4: space(1,fill=00)
section .data (attr=<adrw> align=1):
       0: opts: cpu types: m68000
       0: opts: fpu id 1 (f2xx)
       0: opts: small data is disabled
       0: opts: optimizations enabled
       0: opts: opt generic (1)
       0: opts: opt movem (0)
       0: opts: opt pea (0)
       0: opts: opt clr (0)
       0: opts: opt st (0)
       0: opts: opt lsl (0)
       0: opts: opt mul (0)
       0: opts: opt div (0)
       0: opts: opt float const (1)
       0: opts: opt branch to jump (0)
       0: opts: opt jump to longbranch (0)
       0: opts: opt pc-relative (1)
       0: opts: opt branch (1)
       0: opts: opt displacement (1)
       0: opts: opt absolute (1)
       0: opts: opt moveq (1)
       0: opts: opt neg.moveq (0)
       0: opts: opt quick (1)
       0: opts: opt branch to nop (1)
       0: opts: opt base disp (1)
       0: opts: opt outer disp (1)
       0: opts: opt adda/subq to lea (1)
       0: opts: opt lea to addq/subq (1)
       0: opts: opt immediate areg (1)
       0: opts: opt for speed (0)
       0: opts: opt for size (0)
       0: opts: opt small code (0)
       0: opts: opt small data (0)
       0: opts: warn about optimizations (0)
       0: opts: PIC check (0)
       0: opts: type and range checks (1)
       0: opts: hide all warnings (0)
       0: data(30): 44 3a 3a 57 4f 52 4b 4b 4d 36 38 4b 41 4f 43 43 44 41 59 31 31 49 4e 50 55 54 2e 54 58 54 
      1e: data(1): 00 
Symbols:
old_sp IMP REF 
exit_super LAB (0x32) sec=.text 
file_handle IMP REF 
exit LAB (0x40) sec=.text 
file_name IMP REF 
enter_super LAB (0x22) sec=.text 
main LAB (0) UNUSED sec=.text 
_MOVEMBYTES EXPR(0=0) INTERNAL 
 MOVEMSIZE EXPR(0=0) INTERNAL 
_MOVEMREGS EXPR(0=0) INTERNAL 
__VASM EXPR(1=0x1) INTERNAL 
__UNIXFS EXPR(0=0) INTERNAL 
